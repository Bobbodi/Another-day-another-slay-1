{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leewe\\\\Another-day-another-slay\\\\adas2\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { MongoClient } from \"mongodb\";\n\n// Replace the uri string with your MongoDB deployment's connection string.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uri = \"<connection string uri>\";\n\n// Create a new client and connect to MongoDB\nconst client = new MongoClient(uri);\nasync function run() {\n  try {\n    // Connect to the \"sample_mflix\" database and access its \"movies\" collection\n    const database = client.db(\"sample_mflix\");\n    const movies = database.collection(\"movies\");\n\n    // Create a document to insert\n    const doc = {\n      title: \"Charade\",\n      genres: [\"Comedy\", \"Romance\", \"Thriller\"],\n      year: 1963,\n      cast: [\"Cary Grant\", \"Audrey Hepburn\", \"Walter Matthau\"]\n    };\n    // Insert the defined document into the \"movies\" collection\n    const result = await movies.insertOne(doc);\n\n    // Print the ID of the inserted document\n    console.log(`A document was inserted with the _id: ${result.insertedId}`);\n  } finally {\n    // Close the MongoDB client connection\n    await client.close();\n  }\n}\n// Run the function and handle any errors\nrun().catch(console.dir);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SlayFocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"AnotherDayAnotherSlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","MongoClient","jsxDEV","_jsxDEV","uri","client","run","database","db","movies","collection","doc","title","genres","year","cast","result","insertOne","console","log","insertedId","close","catch","dir","App","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/leewe/Another-day-another-slay/adas2/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport { MongoClient } from \"mongodb\";\n\n// Replace the uri string with your MongoDB deployment's connection string.\nconst uri = \"<connection string uri>\";\n\n// Create a new client and connect to MongoDB\nconst client = new MongoClient(uri);\n\nasync function run() {\n  try {\n    // Connect to the \"sample_mflix\" database and access its \"movies\" collection\n    const database = client.db(\"sample_mflix\");\n    const movies = database.collection(\"movies\");\n    \n    // Create a document to insert\n    const doc = {\n      title: \"Charade\",\n      genres: [\"Comedy\", \"Romance\", \"Thriller\"],\n      year: 1963,\n      cast: [\"Cary Grant\", \"Audrey Hepburn\", \"Walter Matthau\"],\n    }\n    // Insert the defined document into the \"movies\" collection\n    const result = await movies.insertOne(doc);\n\n    // Print the ID of the inserted document\n    console.log(`A document was inserted with the _id: ${result.insertedId}`);\n  } finally {\n     // Close the MongoDB client connection\n    await client.close();\n  }\n}\n// Run the function and handle any errors\nrun().catch(console.dir);\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          SlayFocus\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          AnotherDayAnotherSlay\n        </a>\n      </header>\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,SAASC,WAAW,QAAQ,SAAS;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAG,yBAAyB;;AAErC;AACA,MAAMC,MAAM,GAAG,IAAIJ,WAAW,CAACG,GAAG,CAAC;AAEnC,eAAeE,GAAGA,CAAA,EAAG;EACnB,IAAI;IACF;IACA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAE,CAAC,cAAc,CAAC;IAC1C,MAAMC,MAAM,GAAGF,QAAQ,CAACG,UAAU,CAAC,QAAQ,CAAC;;IAE5C;IACA,MAAMC,GAAG,GAAG;MACVC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC;MACzCC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,gBAAgB;IACzD,CAAC;IACD;IACA,MAAMC,MAAM,GAAG,MAAMP,MAAM,CAACQ,SAAS,CAACN,GAAG,CAAC;;IAE1C;IACAO,OAAO,CAACC,GAAG,CAAC,yCAAyCH,MAAM,CAACI,UAAU,EAAE,CAAC;EAC3E,CAAC,SAAS;IACP;IACD,MAAMf,MAAM,CAACgB,KAAK,CAAC,CAAC;EACtB;AACF;AACA;AACAf,GAAG,CAAC,CAAC,CAACgB,KAAK,CAACJ,OAAO,CAACK,GAAG,CAAC;AAGxB,SAASC,GAAGA,CAAA,EAAG;EACb,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvB,OAAA;QAAKwB,GAAG,EAAE3B,IAAK;QAACyB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD7B,OAAA;QAAAuB,QAAA,EAAG;MAEH;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ7B,OAAA;QACEsB,SAAS,EAAC,UAAU;QACpBQ,IAAI,EAAC,qBAAqB;QAC1BC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAT,QAAA,EAC1B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGV;AAACI,EAAA,GApBQZ,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}